#ifndef __RC_MESSAGES_AND_DEFINES_H
#define __RC_MESSAGES_AND_DEFINES_H

// STATES FOR REMOTE CONTROLLER
#define STATE_REMOTE_WAIT_FOR_CHANNEL_SELECT 0
#define STATE_REMOTE_ADVERTISE_AVAILABLE 1
#define STATE_REMOTE_SINGLE_MODE 2
#define STATE_REMOTE_TRUCK_POOLING_PENDING 3 
#define STATE_REMOTE_TRUCK_POOLING_ENABLED 4

// MESSAGE TYPES FOR REMOTE CONTROLLER
#define MSG_REMOTE_TYPE_ADVERTISE_AVAILABLE 14
#define MSG_REMOTE_TYPE_JOYSTICK 1
#define MSG_REMOTE_TYPE_REQUEST_POOLING 2
#define MSG_REMOTE_TYPE_STOP_POOLING 3

// STATES FOR CAR
#define STATE_CAR_ADVERTISE_AVAILABLE 0
#define STATE_CAR_SINGLE_MODE 1
#define STATE_CAR_TRUCK_POOLING_PENDING 2
#define STATE_CAR_TRUCK_POOLING_SLAVE 3
#define STATE_CAR_TRUCK_POOLING_MASTER 4

// MESAGE TYPES FOR CAR
#define MSG_CAR_TYPE_ADVERTISE_AVAILABLE 0
#define MSG_CAR_TYPE_ACKNOWLEDGE 1
#define MSG_CAR_TYPE_REQUEST_POOLING 2
#define MSG_CAR_TYPE_ACCEPT_POOLING 3
#define MSG_CAR_TYPE_STOP_POOLING 4
#define MSG_CAR_TYPE_SPEED_INFO 5 



typedef struct 
{
    uint8_t senderID;
    uint8_t type;
    uint32_t x;
    uint32_t y;
    uint8_t button;
     
 } remote_packet_t;

typedef struct 
{
	uint8_t senderID;
	uint8_t type;
	int8_t speed_info;
	
} car_packet_t;




#endif // MESSAGES_AND_DEFINES
/** @} */
